#######################################################################
# Development Backend Services for Local Development
#
# This provides only the backend services (MongoDB, Meilisearch, etc.)
# Run your API and client locally with:
#   npm run backend:dev
#   npm run frontend:dev (in another terminal)
#
# Start services with:
#   docker compose -f docker-compose.dev.yml up -d
#
# Backend services exposed on localhost:
# - MongoDB: 27017
# - Meilisearch: 7700  
# - Vector DB (PostgreSQL): 5432
# - RAG API: 8000
#######################################################################

services:

  mongodb:
    container_name: chat-mongodb-dev
    image: mongo:7
    restart: unless-stopped
    command: mongod --noauth
    ports:
      - "27017:27017"
    volumes:
      - ./data-node:/data/db

  meilisearch:
    container_name: chat-meilisearch-dev
    image: getmeili/meilisearch:v1.12.3
    restart: unless-stopped
    environment:
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_NO_ANALYTICS=true
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-dev_key_change_me}
    ports:
      - "7700:7700"
    volumes:
      - ./meili_data_v1.12:/meili_data

  vectordb:
    container_name: vectordb-dev
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - pgdata2_dev:/var/lib/postgresql/data

  rag_api:
    container_name: rag_api-dev
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    environment:
      - DB_HOST=vectordb
      - RAG_PORT=${RAG_PORT:-8000}
    restart: unless-stopped
    depends_on:
      - vectordb
    ports:
      - "8000:8000"
    env_file:
      - .env

volumes:
  pgdata2_dev:
